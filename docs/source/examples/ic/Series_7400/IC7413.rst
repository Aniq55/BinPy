
Usage of IC 7413
----------------

.. code:: python

    from __future__ import print_function
    from BinPy import *
.. code:: python

    # Usage of IC 7413:
    
    ic = IC_7413()
    
    print(ic.__doc__)

.. parsed-literal::

    
        This is a dual 4 input NAND gate IC
    
        Pin Number	Description
            1	A Input Gate 1
            2	B Input Gate 1
            3	Not Connected
            4	C Input Gate 1
            5	D Input Gate 1
            6	Y Output Gate 1
            7	Ground
            8	Y Output Gate 2
            9	A Input Gate 2
            10	B Input Gate 2
            11	Not Connected
            12	C Input Gate 2
            13	D Input Gate 2
            14	Positive Supply
    
    
        This class needs 14 parameters. Each parameter being the pin value. The input has to be defined as a dictionary
        with pin number as the key and its value being either 1 or 0
    
        To initialise the ic 7413:
            1. set pin 7:0
            2. set pin 14:1
    
        How to use:
    
            >>> ic = IC_7413()
            >>> pin_config = {1: 1, 2: 0, 4: 0, 5: 0, 7: 0, 9: 1, 10: 1, 12: 1, 13: 1, 14: 1}
            >>> ic.setIC(pin_cofig)
            >>> ic.drawIC()
            >>> ic.run()
            >>> ic.setIC(ic.run())
            >>> ic.drawIC()
    
        Default pins:
            pins = [None,0,0,0,0,0,None,0,None,0,0,0,0,0,0]
    
        


.. code:: python

    # The Pin configuration is:
    
    inp = {1: 1, 2: 0, 4: 0, 5: 0, 7: 0, 9: 1, 10: 1, 12: 1, 13: 1, 14: 1}
    
    # Pin initinalization
    
    # Powering up the IC - using -- ic.setIC({14: 1, 7: 0})
    
    ic.setIC({14: 1, 7: 0})
    
    # Setting the inputs of the ic
    
    ic.setIC(inp)
    
    # Draw the IC with the current configuration\n
    
    ic.drawIC()

.. parsed-literal::

    
    
                  ┌─────────◡─────────┐
                  │                   │
         [1]    ──┤  1            14  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  2      7     13  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  3      4     12  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  4      1     11  ├──    [0]    
                  │                   │
                  │                   │
         [0]    ──┤  5      3     10  ├──    [1]    
                  │                   │
                  │                   │
         [Z]    ──┤  6             9  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  7             8  ├──    [Z]    
                  │                   │
                  └───────────────────┘  


.. code:: python

    # Run the IC with the current configuration using -- print ic.run() -- 
    
    # Note that the ic.run() returns a dict of pin configuration similar to 
    
    print (ic.run())

.. parsed-literal::

    {8: 0, 6: 1}


.. code:: python

    # Seting the outputs to the current IC configuration using -- ic.setIC(ic.run()) --\n
    
    ic.setIC(ic.run())
    
    # Draw the final configuration
    
    ic.drawIC()

.. parsed-literal::

    
    
                  ┌─────────◡─────────┐
                  │                   │
         [1]    ──┤  1            14  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  2      7     13  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  3      4     12  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  4      1     11  ├──    [0]    
                  │                   │
                  │                   │
         [0]    ──┤  5      3     10  ├──    [1]    
                  │                   │
                  │                   │
         [1]    ──┤  6             9  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  7             8  ├──    [0]    
                  │                   │
                  └───────────────────┘  


.. code:: python

    # Seting the outputs to the current IC configuration using -- ic.setIC(ic.run()) --
    
    ic.setIC(ic.run())
    
    # Draw the final configuration
    
    ic.drawIC()
    
    # Run the IC
    
    print (ic.run())

.. parsed-literal::

    
    
                  ┌─────────◡─────────┐
                  │                   │
         [1]    ──┤  1            14  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  2      7     13  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  3      4     12  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  4      1     11  ├──    [0]    
                  │                   │
                  │                   │
         [0]    ──┤  5      3     10  ├──    [1]    
                  │                   │
                  │                   │
         [1]    ──┤  6             9  ├──    [1]    
                  │                   │
                  │                   │
         [0]    ──┤  7             8  ├──    [0]    
                  │                   │
                  └───────────────────┘  
    {8: 0, 6: 1}


.. code:: python

    # Connector Outputs
    c = Connector()
    
    # Set the output connector to a particular pin of the ic
    ic.setOutput(8, c)
    
    print(c)

.. parsed-literal::

    Connector; State: 0

